/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

/**
 *
 * @author mcdebug
 */
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JFormattedTextField; 
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.concurrent.TimeUnit;
import java.awt.Container;
import java.awt.BorderLayout;

public class TelaReservas extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(TelaReservas.class.getName());

    /**
     * Creates new form TelaReservas
     */
    private static final int CAPACIDADE_TOTAL_QUARTOS_HOTEL = 50;
    public TelaReservas()
{
    initComponents();
    setLocationRelativeTo(null);
    try {
            MaskFormatter dateMask = new MaskFormatter("##/##/####");
            dateMask.setPlaceholderCharacter('_');
            txtDataCheckIn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(dateMask)); // Definir factory aqui
            txtDataCheckIn.setColumns(10); // Ajuste de largura para a máscara
            txtDataCheckOut.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(dateMask)); // Definir factory aqui
            txtDataCheckOut.setColumns(10); // Ajuste de largura para a máscara
    } 
    catch (ParseException ex) 
    {
        logger.log(java.util.logging.Level.SEVERE, "Erro ao configurar máscaras de data: ", ex);
        JOptionPane.showMessageDialog(this, "Erro ao configurar máscaras de data: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }

}
    public TelaReservas(String nomeHospede) 
    {
        this(); 

    if (nomeHospede == null || nomeHospede.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this,
                                      "Erro: Não foi possível carregar o nome do hóspede. Por favor, cadastre um hóspede primeiro.",
                                      "Nome do Hóspede Ausente",
                                      JOptionPane.ERROR_MESSAGE);
        txtNomeHospede.setText(""); 
        txtNomeHospede.setEditable(false); 
        btnAdicionarReserva.setEnabled(false); 
        
    } else {
        txtNomeHospede.setText(nomeHospede);
        txtNomeHospede.setEditable(false);
        btnAdicionarReserva.setEnabled(true); 
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelConteudoPrincipal = new javax.swing.JPanel();
        panelCabecalho = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bnVoltar = new javax.swing.JButton();
        panelSecoesPrincipais = new javax.swing.JPanel();
        panelFormFields = new javax.swing.JPanel();
        lbNomedoHóspede = new javax.swing.JLabel();
        txtNomeHospede = new javax.swing.JTextField();
        lbDatadeCheckin = new javax.swing.JLabel();
        txtDataCheckIn = new javax.swing.JFormattedTextField();
        lbDataCheckOut = new javax.swing.JLabel();
        txtDataCheckOut = new javax.swing.JFormattedTextField();
        lbtxtNumeroQuartos = new javax.swing.JLabel();
        txtNumeroQuartos = new javax.swing.JFormattedTextField();
        btnAdicionarReserva = new javax.swing.JButton();
        panelModifyReservations = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.BorderLayout(12, 0));

        panelConteudoPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        panelConteudoPrincipal.setLayout(new java.awt.BorderLayout());

        panelCabecalho.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hotel Reservas");
        jLabel1.setAlignmentX(0.5F);

        bnVoltar.setText("Voltar");
        bnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCabecalhoLayout = new javax.swing.GroupLayout(panelCabecalho);
        panelCabecalho.setLayout(panelCabecalhoLayout);
        panelCabecalhoLayout.setHorizontalGroup(
            panelCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCabecalhoLayout.createSequentialGroup()
                .addGap(319, 319, 319)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                .addComponent(bnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        panelCabecalhoLayout.setVerticalGroup(
            panelCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCabecalhoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(bnVoltar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        panelConteudoPrincipal.add(panelCabecalho, java.awt.BorderLayout.NORTH);

        panelSecoesPrincipais.setBackground(new java.awt.Color(255, 255, 255));
        panelSecoesPrincipais.setBorder(javax.swing.BorderFactory.createEmptyBorder(9, 5, 8, 10));
        panelSecoesPrincipais.setMaximumSize(new java.awt.Dimension(32767, 200));
        panelSecoesPrincipais.setPreferredSize(new java.awt.Dimension(200, 50));

        panelFormFields.setBackground(new java.awt.Color(204, 204, 204));
        panelFormFields.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 8, 8, 10));
        panelFormFields.setForeground(new java.awt.Color(255, 255, 255));
        panelFormFields.setLayout(new java.awt.GridLayout(0, 1, 1, 1));

        lbNomedoHóspede.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        lbNomedoHóspede.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbNomedoHóspede.setText("Nome do Hóspede");
        lbNomedoHóspede.setPreferredSize(new java.awt.Dimension(120, 20));
        panelFormFields.add(lbNomedoHóspede);

        txtNomeHospede.setEditable(false);
        txtNomeHospede.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 9, 10));
        txtNomeHospede.setMinimumSize(new java.awt.Dimension(20, 3));
        txtNomeHospede.setPreferredSize(new java.awt.Dimension(120, 20));
        txtNomeHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeHospedeActionPerformed(evt);
            }
        });
        panelFormFields.add(txtNomeHospede);

        lbDatadeCheckin.setBackground(new java.awt.Color(0, 0, 0));
        lbDatadeCheckin.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        lbDatadeCheckin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDatadeCheckin.setText("Data de Check-in");
        lbDatadeCheckin.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 9, 10));
        panelFormFields.add(lbDatadeCheckin);

        try {
            txtDataCheckIn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/ ##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataCheckIn.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataCheckInActionPerformed(evt);
            }
        });
        panelFormFields.add(txtDataCheckIn);

        lbDataCheckOut.setBackground(new java.awt.Color(0, 0, 0));
        lbDataCheckOut.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        lbDataCheckOut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDataCheckOut.setText("Data de Check-out:");
        panelFormFields.add(lbDataCheckOut);

        try {
            txtDataCheckOut.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/ ## / ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataCheckOut.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataCheckOut.setToolTipText("");
        txtDataCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataCheckOutActionPerformed(evt);
            }
        });
        panelFormFields.add(txtDataCheckOut);

        lbtxtNumeroQuartos.setBackground(new java.awt.Color(0, 0, 0));
        lbtxtNumeroQuartos.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        lbtxtNumeroQuartos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbtxtNumeroQuartos.setText("Número de Quartos:");
        panelFormFields.add(lbtxtNumeroQuartos);

        txtNumeroQuartos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat(""))));
        txtNumeroQuartos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelFormFields.add(txtNumeroQuartos);

        btnAdicionarReserva.setBackground(new java.awt.Color(102, 102, 102));
        btnAdicionarReserva.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnAdicionarReserva.setText("Adicionar Reserva");
        btnAdicionarReserva.setAlignmentX(0.5F);
        btnAdicionarReserva.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 15, 10, 15));
        btnAdicionarReserva.setMaximumSize(new java.awt.Dimension(120, 20));
        btnAdicionarReserva.setMinimumSize(new java.awt.Dimension(120, 20));
        btnAdicionarReserva.setPreferredSize(new java.awt.Dimension(120, 20));
        btnAdicionarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarReservaActionPerformed(evt);
            }
        });
        panelFormFields.add(btnAdicionarReserva);

        javax.swing.GroupLayout panelSecoesPrincipaisLayout = new javax.swing.GroupLayout(panelSecoesPrincipais);
        panelSecoesPrincipais.setLayout(panelSecoesPrincipaisLayout);
        panelSecoesPrincipaisLayout.setHorizontalGroup(
            panelSecoesPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFormFields, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
        );
        panelSecoesPrincipaisLayout.setVerticalGroup(
            panelSecoesPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSecoesPrincipaisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelFormFields, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelConteudoPrincipal.add(panelSecoesPrincipais, java.awt.BorderLayout.LINE_START);

        panelModifyReservations.setBackground(new java.awt.Color(240, 240, 240));
        panelModifyReservations.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelModifyReservations.setPreferredSize(new java.awt.Dimension(400, 300));
        panelModifyReservations.setLayout(new java.awt.BorderLayout());
        panelConteudoPrincipal.add(panelModifyReservations, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelConteudoPrincipal, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDataCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataCheckOutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataCheckOutActionPerformed

    private void txtDataCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataCheckInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataCheckInActionPerformed

    private void txtNomeHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeHospedeActionPerformed

    }//GEN-LAST:event_txtNomeHospedeActionPerformed

    private void btnAdicionarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarReservaActionPerformed
     
    if (txtNomeHospede.getText().trim().isEmpty()) { // Usamos getText().trim().isEmpty() para verificar se está realmente vazio
        JOptionPane.showMessageDialog(this,
                                      "Por favor, cadastre um hóspede, o campo de nome não está preenchido.",
                                      "Nome do Hóspede Ausente",
                                      JOptionPane.WARNING_MESSAGE);
        txtNomeHospede.requestFocus(); // Opcional: focar no campo
        return; // Retorna para impedir a continuação da reserva
    }

    // 2. Validação para o Número de Quartos (existente)
    if (!validarNumeroQuartos(txtNumeroQuartos)) {
        return; // validarNumeroQuartos já exibe sua própria mensagem
    }

    // 3. Validação das Datas (existente)
    Date checkInDate = parseAndValidateDate(txtDataCheckIn, "Data de Check-in");
    if (checkInDate == null) return;

    Date checkOutDate = parseAndValidateDate(txtDataCheckOut, "Data de Check-out");
    if (checkOutDate == null) return;

    if (checkOutDate.before(checkInDate) || checkOutDate.equals(checkInDate)) {
        JOptionPane.showMessageDialog(this, "A Data de Check-out deve ser posterior à Data de Check-in.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
        txtDataCheckOut.requestFocus();
        return;
    }

    Date hoje = new Date();
    hoje = resetTime(hoje);
    Date checkInDateOnly = resetTime(checkInDate);

    if (checkInDateOnly.before(hoje)) {
        JOptionPane.showMessageDialog(this, "A Data de Check-in não pode ser uma data passada.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
        txtDataCheckIn.requestFocus();
        return;
    }

    // 4. Validação da Disponibilidade de Quartos (existente)
    int numQuartosDesejados = Integer.parseInt(txtNumeroQuartos.getText().trim());
    int quartosOcupadosNoPeriodo = getQuartosOcupadosParaPeriodo(checkInDate, checkOutDate);
    int quartosDisponiveis = CAPACIDADE_TOTAL_QUARTOS_HOTEL - quartosOcupadosNoPeriodo;

    if (numQuartosDesejados > quartosDisponiveis) {
        JOptionPane.showMessageDialog(this,
            "Não há quartos suficientes disponíveis para o período e quantidade solicitados.\n" +
            "Quartos disponíveis: " + quartosDisponiveis + "\n" +
            "Capacidade total: " + CAPACIDADE_TOTAL_QUARTOS_HOTEL,
            "Hotel Cheio", JOptionPane.WARNING_MESSAGE);
        txtNumeroQuartos.requestFocus();
        return;
    }

    // Se todas as validações passarem
    JOptionPane.showMessageDialog(this, "Reserva adicionada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    limparCamposReserva();
  
    }//GEN-LAST:event_btnAdicionarReservaActionPerformed

    private void bnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnVoltarActionPerformed
       
        TelaHome telaHome = new TelaHome();
        telaHome.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bnVoltarActionPerformed
    private boolean validarNumeroQuartos(javax.swing.JTextField textField) {
        String numQuartosStr = textField.getText().trim();
        if (!validarCampoVazio(textField, "Número de Quartos")) {
            return false;
        }
        try {
            int numQuartos = Integer.parseInt(numQuartosStr);
            if (numQuartos <= 0) {
                JOptionPane.showMessageDialog(this, "O 'Número de Quartos' deve ser um valor positivo.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
                textField.requestFocus();
                return false;
            }
            return true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Formato de 'Número de Quartos' inválido. Insira apenas números inteiros.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return false;
        }
    }
    private Date parseAndValidateDate(JFormattedTextField textField, String nomeCampo) {
        String dataStr = textField.getText().replace("/", "").replace("_", "").trim();
        if (dataStr.isEmpty() || dataStr.equals("__/____")) {
            JOptionPane.showMessageDialog(this, "O campo '" + nomeCampo + "' não pode ser vazio.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return null;
        }
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        dateFormat.setLenient(false);
        try {
            Date data = dateFormat.parse(textField.getText());
            return data;
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de data inválido para '" + nomeCampo + "'. Use DD/MM/AAAA.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return null;
        }
    }
    private boolean validarCampoVazio(JFormattedTextField textField, String nomeCampo) {
        String text = textField.getText().replace("/", "").replace("_", "").trim();
        if (text.isEmpty() || text.equals("__/____")) {
            JOptionPane.showMessageDialog(this, "O campo '" + nomeCampo + "' não pode ser vazio.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return false;
        }
        return true;
    }

    // PERSONALIZADO: Validação de campo vazio para JTextField
    private boolean validarCampoVazio(javax.swing.JTextField textField, String nomeCampo) {
        if (textField.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O campo '" + nomeCampo + "' não pode ser vazio.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return false;
        }
        return true;
    }

    private Date resetTime(Date date)
    {
        if (date == null) return null;
        java.util.Calendar cal = java.util.Calendar.getInstance();
        cal.setTime(date);
        cal.set(java.util.Calendar.HOUR_OF_DAY, 0);
        cal.set(java.util.Calendar.MINUTE, 0);
        cal.set(java.util.Calendar.SECOND, 0);
        cal.set(java.util.Calendar.MILLISECOND, 0);
        return cal.getTime();
    }
    private int getQuartosOcupadosParaPeriodo(Date checkIn, Date checkOut)
    {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        try {
            Date dataExemploInicio = sdf.parse("20/06/2025");
            Date dataExemploFim = sdf.parse("25/06/2025");

            if (checkIn.before(dataExemploFim) && checkOut.after(dataExemploInicio)) {
                return 15;
            } 
            else
            {
                return 5;
            }
        } catch (ParseException e) {
            e.printStackTrace();
            return 0;
        }
    }

    private void limparCamposReserva()
    {
        txtDataCheckIn.setText("");
        txtDataCheckOut.setText("");
        txtNumeroQuartos.setText("");
        // Limpar outros campos específicos da reserva, se houver
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() {
                new TelaReservas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton bnVoltar;
    protected javax.swing.JButton btnAdicionarReserva;
    protected javax.swing.JLabel jLabel1;
    protected javax.swing.JLabel lbDataCheckOut;
    protected javax.swing.JLabel lbDatadeCheckin;
    protected javax.swing.JLabel lbNomedoHóspede;
    protected javax.swing.JLabel lbtxtNumeroQuartos;
    protected javax.swing.JPanel panelCabecalho;
    protected javax.swing.JPanel panelConteudoPrincipal;
    protected javax.swing.JPanel panelFormFields;
    protected javax.swing.JPanel panelModifyReservations;
    protected javax.swing.JPanel panelSecoesPrincipais;
    protected javax.swing.JFormattedTextField txtDataCheckIn;
    protected javax.swing.JFormattedTextField txtDataCheckOut;
    protected javax.swing.JTextField txtNomeHospede;
    protected javax.swing.JFormattedTextField txtNumeroQuartos;
    // End of variables declaration//GEN-END:variables
}
