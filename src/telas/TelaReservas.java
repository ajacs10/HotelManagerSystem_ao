/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

/**
 *
 * @author mcdebug
 */
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JFormattedTextField; 
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.concurrent.TimeUnit;
import java.awt.Container;
import java.awt.BorderLayout;

public class TelaReservas extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(TelaReservas.class.getName());

    /**
     * Creates new form TelaReservas
     */
    private static final int CAPACIDADE_TOTAL_QUARTOS_HOTEL = 50;
    public TelaReservas() 
    {
        initComponents();
         setLocationRelativeTo(null);
     // --- INÍCIO DO CÓDIGO CORRIGIDO PARA O FUNDO ---

        // Crie o painel de fundo
        JPanelComFundo painelDeFundoDoJFrame = new JPanelComFundo("/Imagem/fundo.png");
        painelDeFundoDoJFrame.setLayout(new java.awt.BorderLayout()); // Definindo um layout para o painel de fundo

        // Obtenha o content pane atual (onde jPanel1 foi adicionado pelo initComponents)
        java.awt.Container originalContentPane = getContentPane();

        // Remova jPanel1 do content pane original
        // É importante que jPanel1 seja transparente para que o fundo seja visível
        jPanel1.setOpaque(false); // ISSO É FUNDAMENTAL! Tornar o jPanel1 transparente

        // Remova todos os componentes do content pane original antes de substituí-lo
        // Isso é mais seguro para evitar artefatos visuais se houver outros componentes.
        originalContentPane.removeAll();

        // Adicione o jPanel1 (que contém os campos do formulário) ao seu painel de fundo personalizado
        // O BorderLayout.CENTER fará com que jPanel1 preencha a maior parte do painel de fundo
        painelDeFundoDoJFrame.add(jPanel1, java.awt.BorderLayout.CENTER);

        // Defina o novo painel de fundo como o content pane do JFrame
        setContentPane(painelDeFundoDoJFrame);

        // Redesenhe a janela para aplicar as mudanças de layout
        revalidate();
        repaint();

        // --- FIM DO CÓDIGO CORRIGIDO PARA O FUNDO ---

        // O restante do seu código do construtor permanece igual
        // (configuração das máscaras, etc.)
        try {
            MaskFormatter dateMask = new MaskFormatter("##/##/####");
            dateMask.setPlaceholderCharacter('_');
            txtDataCheckIn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(dateMask)); // Definir factory aqui
            txtDataCheckOut.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(dateMask)); // Definir factory aqui
        } catch (ParseException ex) {
            logger.log(java.util.logging.Level.SEVERE, "Erro ao configurar máscaras de data: ", ex);
            JOptionPane.showMessageDialog(this, "Erro ao configurar máscaras de data: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        // A linha abaixo já é adicionada pelo NetBeans no initComponents se você usou o design view.
        // Se ela existir duplicada, pode causar comportamentos inesperados.
        // Se você não vê `btnAdicionarReserva.addActionListener` em initComponents(), mantenha esta linha.
        // Se já foi gerada, remova esta. Por segurança, vamos mantê-la como está no seu código.
        btnAdicionarReserva.addActionListener(this::btnAdicionarReservaActionPerformed);   
    }      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAdicionarReserva = new javax.swing.JButton();
        lbtxtNumeroQuartos = new javax.swing.JLabel();
        lbDataCheckOut = new javax.swing.JLabel();
        lbDatadeCheckin = new javax.swing.JLabel();
        txtNomeHospede = new javax.swing.JTextField();
        lbNomedoHóspede = new javax.swing.JLabel();
        txtDataCheckIn = new javax.swing.JFormattedTextField();
        txtDataCheckOut = new javax.swing.JFormattedTextField();
        txtNumeroQuartos = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAdicionarReserva.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        btnAdicionarReserva.setText("Adicionar Reserva");
        btnAdicionarReserva.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 15, 10, 15));
        btnAdicionarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarReservaActionPerformed(evt);
            }
        });

        lbtxtNumeroQuartos.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lbtxtNumeroQuartos.setForeground(new java.awt.Color(255, 255, 255));
        lbtxtNumeroQuartos.setText("Número de Quartos:");

        lbDataCheckOut.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lbDataCheckOut.setForeground(new java.awt.Color(255, 255, 255));
        lbDataCheckOut.setText("Data de Check-out:");

        lbDatadeCheckin.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lbDatadeCheckin.setForeground(new java.awt.Color(255, 255, 255));
        lbDatadeCheckin.setText("Data de Check-in");

        txtNomeHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeHospedeActionPerformed(evt);
            }
        });

        lbNomedoHóspede.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        lbNomedoHóspede.setForeground(new java.awt.Color(255, 255, 255));
        lbNomedoHóspede.setText("Nome do Hóspede:");

        try {
            txtDataCheckIn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/ ##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataCheckIn.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataCheckInActionPerformed(evt);
            }
        });

        try {
            txtDataCheckOut.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/ ## / ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataCheckOut.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataCheckOut.setToolTipText("");
        txtDataCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataCheckOutActionPerformed(evt);
            }
        });

        txtNumeroQuartos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("1"))));
        txtNumeroQuartos.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(btnAdicionarReserva)
                .addContainerGap(308, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomeHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtDataCheckIn)
                        .addComponent(txtDataCheckOut, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addComponent(txtNumeroQuartos)))
                .addGap(154, 154, 154))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(156, 156, 156)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbNomedoHóspede)
                        .addComponent(lbDatadeCheckin)
                        .addComponent(lbDataCheckOut)
                        .addComponent(lbtxtNumeroQuartos))
                    .addContainerGap(401, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNomeHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(txtDataCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtDataCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNumeroQuartos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnAdicionarReserva)
                .addGap(26, 26, 26))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addComponent(lbNomedoHóspede)
                    .addGap(18, 18, 18)
                    .addComponent(lbDatadeCheckin)
                    .addGap(27, 27, 27)
                    .addComponent(lbDataCheckOut)
                    .addGap(18, 18, 18)
                    .addComponent(lbtxtNumeroQuartos)
                    .addContainerGap(86, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(678, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeHospedeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeHospedeActionPerformed

    private void txtDataCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataCheckInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataCheckInActionPerformed

    private void txtDataCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataCheckOutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataCheckOutActionPerformed

    private void btnAdicionarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarReservaActionPerformed
        if (!validarCampoVazio(txtNomeHospede, "Nome do Hóspede") ||
            !validarNumeroQuartos(txtNumeroQuartos))
        {
            return;
        }

        Date checkInDate = parseAndValidateDate(txtDataCheckIn, "Data de Check-in");
        if (checkInDate == null) return;

        Date checkOutDate = parseAndValidateDate(txtDataCheckOut, "Data de Check-out");
        if (checkOutDate == null) return;

        if (checkOutDate.before(checkInDate) || checkOutDate.equals(checkInDate)) {
            JOptionPane.showMessageDialog(this, "A Data de Check-out deve ser posterior à Data de Check-in.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            txtDataCheckOut.requestFocus();
            return;
        }

        Date hoje = new Date();
        hoje = resetTime(hoje);
        Date checkInDateOnly = resetTime(checkInDate);

        if (checkInDateOnly.before(hoje)) {
            JOptionPane.showMessageDialog(this, "A Data de Check-in não pode ser uma data passada.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            txtDataCheckIn.requestFocus();
            return;
        }

        int numQuartosDesejados = Integer.parseInt(txtNumeroQuartos.getText().trim());
        int quartosOcupadosNoPeriodo = getQuartosOcupadosParaPeriodo(checkInDate, checkOutDate);
        int quartosDisponiveis = CAPACIDADE_TOTAL_QUARTOS_HOTEL - quartosOcupadosNoPeriodo;

        if (numQuartosDesejados > quartosDisponiveis) {
            JOptionPane.showMessageDialog(this,
                    "Não há quartos suficientes disponíveis para o período e quantidade solicitados.\n" +
                    "Quartos disponíveis: " + quartosDisponiveis + "\n" +
                    "Capacidade total: " + CAPACIDADE_TOTAL_QUARTOS_HOTEL,
                    "Hotel Cheio", JOptionPane.WARNING_MESSAGE);
            txtNumeroQuartos.requestFocus();
            return;
        }

        JOptionPane.showMessageDialog(this, "Reserva adicionada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        limparCamposReserva();
    }//GEN-LAST:event_btnAdicionarReservaActionPerformed
    private boolean validarNumeroQuartos(javax.swing.JTextField textField) {
        String numQuartosStr = textField.getText().trim();
        if (!validarCampoVazio(textField, "Número de Quartos")) {
            return false;
        }
        try {
            int numQuartos = Integer.parseInt(numQuartosStr);
            if (numQuartos <= 0) {
                JOptionPane.showMessageDialog(this, "O 'Número de Quartos' deve ser um valor positivo.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
                textField.requestFocus();
                return false;
            }
            return true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Formato de 'Número de Quartos' inválido. Insira apenas números inteiros.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return false;
        }
    }
    private Date parseAndValidateDate(JFormattedTextField textField, String nomeCampo) {
        String dataStr = textField.getText().replace("/", "").replace("_", "").trim();
        if (dataStr.isEmpty() || dataStr.equals("__/____")) {
            JOptionPane.showMessageDialog(this, "O campo '" + nomeCampo + "' não pode ser vazio.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return null;
        }
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        dateFormat.setLenient(false);
        try {
            Date data = dateFormat.parse(textField.getText());
            return data;
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de data inválido para '" + nomeCampo + "'. Use DD/MM/AAAA.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return null;
        }
    }
    private boolean validarCampoVazio(JFormattedTextField textField, String nomeCampo) {
        String text = textField.getText().replace("/", "").replace("_", "").trim();
        if (text.isEmpty() || text.equals("__/____")) {
            JOptionPane.showMessageDialog(this, "O campo '" + nomeCampo + "' não pode ser vazio.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return false;
        }
        return true;
    }

    // PERSONALIZADO: Validação de campo vazio para JTextField
    private boolean validarCampoVazio(javax.swing.JTextField textField, String nomeCampo) {
        if (textField.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O campo '" + nomeCampo + "' não pode ser vazio.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            textField.requestFocus();
            return false;
        }
        return true;
    }

    private Date resetTime(Date date)
    {
        if (date == null) return null;
        java.util.Calendar cal = java.util.Calendar.getInstance();
        cal.setTime(date);
        cal.set(java.util.Calendar.HOUR_OF_DAY, 0);
        cal.set(java.util.Calendar.MINUTE, 0);
        cal.set(java.util.Calendar.SECOND, 0);
        cal.set(java.util.Calendar.MILLISECOND, 0);
        return cal.getTime();
    }
    private int getQuartosOcupadosParaPeriodo(Date checkIn, Date checkOut) {
        // Lógica de simulação - SUBSTITUA PELA LÓGICA DE BANCO DE DADOS
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        try {
            Date dataExemploInicio = sdf.parse("20/06/2025");
            Date dataExemploFim = sdf.parse("25/06/2025");

            if (checkIn.before(dataExemploFim) && checkOut.after(dataExemploInicio)) {
                return 15;
            } else {
                return 5;
            }
        } catch (ParseException e) {
            e.printStackTrace();
            return 0;
        }
    }

    private void limparCamposReserva()
    {
        txtNomeHospede.setText("");
        txtDataCheckIn.setText("");
        txtDataCheckOut.setText("");
        txtNumeroQuartos.setText("");
        // Limpar outros campos específicos da reserva, se houver
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaReservas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarReserva;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbDataCheckOut;
    private javax.swing.JLabel lbDatadeCheckin;
    private javax.swing.JLabel lbNomedoHóspede;
    private javax.swing.JLabel lbtxtNumeroQuartos;
    private javax.swing.JFormattedTextField txtDataCheckIn;
    private javax.swing.JFormattedTextField txtDataCheckOut;
    private javax.swing.JTextField txtNomeHospede;
    private javax.swing.JFormattedTextField txtNumeroQuartos;
    // End of variables declaration//GEN-END:variables
}
